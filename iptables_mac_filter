#!/bin/sh
### BEGIN INIT INFO
# Provides:          iptables
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     S
# Default-Stop:      0 6
# Short-Description: Custom Firewall
# Description:       
#
### END INIT INFO

#
# Author: Yoel Antonio Duran Diaz <yoet92@gmail.com>
# Git: https://github.com/yoet92/iptables.git
#

#==========================VARIABLES=================================#

# WAN
EXT_IF= #eg. eth0
# LAN
LAN_IF= #eg. eth1
# LAN RED
LAN_RED= #eg. 192.168.1.0/24
# Proxy Externo
PROXY_EXT= #eg. 172.16.0.20
# Archivo con MACs
MAC_FILE=/etc/mac

#=====================

IPTABLES=/sbin/iptables
EXT_IP=`ifconfig $EXT_IF | egrep "inet addr" | cut -d : -f2 | cut -d \  -f1`
LAN_IP=`ifconfig $LAN_IF | egrep "inet addr" | cut -d : -f2 | cut -d \  -f1`
LOO_RED=127.0.0.0/8
ANY_RED=0.0.0.0/0
LOGO=echo "
  __ _                        _ _
 / _(_)_ __ _____      ____ _| | |
| |_| | '__/ _ \ \ /\ / / _ \`| | |
|  _| | | |  __/\ V  V / (_| | | |
|_| |_|_|  \___| \_/\_/ \__,_|_|_|
"
if [ ! -x $IPTABLES ]; then
$LOGO
echo "ERROR
=====
${IPTABLES} :No existe o no tiene permiso de ejecucion."
exit 0
fi

#==========================START=====================================#

start_rules() {
if [ ! -s $MAC_FILE ]; then
$LOGO
echo "ERROR
=====
El fichero: ${MAC_FILE} no existe o esta vacio, debe crearlo y llenarlo."
exit 0
fi
$IPTABLES -F
$IPTABLES -X
$IPTABLES -Z
$IPTABLES -t nat -F

$IPTABLES -P INPUT DROP
$IPTABLES -P FORWARD DROP
$IPTABLES -P OUTPUT DROP

echo 1 > /proc/sys/net/ipv4/ip_forward

$IPTABLES -A FORWARD -p tcp --sport 137:139 -o $EXT_IF -j DROP
$IPTABLES -A FORWARD -p udp --sport 137:139 -o $EXT_IF -j DROP
$IPTABLES -A OUTPUT  -p tcp --sport 137:139 -o $EXT_IF -j DROP
$IPTABLES -A OUTPUT  -p udp --sport 137:139 -o $EXT_IF -j DROP

$IPTABLES -A FORWARD -i $LAN_IF -s $LAN_RED -d $PROXY_EXT -j DROP

for MAC in `cat ${MAC_FILE}`; do
$IPTABLES -A FORWARD -i $LAN_IF -m mac --mac-source $MAC -j ACCEPT
$IPTABLES -A INPUT  -s $LAN_RED -i $LAN_IF -m mac --mac-source $MAC -j ACCEPT
$IPTABLES -t nat -A PREROUTING  -i $LAN_IF -m mac --mac-source $MAC -j ACCEPT
done

$IPTABLES -A OUTPUT -o $LAN_IF -s $LAN_IP -j ACCEPT
$IPTABLES -A OUTPUT -o $EXT_IF -s $EXT_IP -j ACCEPT

$IPTABLES -t nat -A POSTROUTING -s $LAN_RED -o $EXT_IF -j MASQUERADE

#lo
$IPTABLES -A INPUT  -i lo -s $LOO_RED -d $LOO_RED -j ACCEPT
$IPTABLES -A OUTPUT -o lo -s $LOO_RED -d $LOO_RED -j ACCEPT
$IPTABLES -t nat -A POSTROUTING -o lo -s $LOO_RED -j ACCEPT

#DNS
$IPTABLES -A INPUT  -s $ANY_RED -i $EXT_IF -p udp -m udp --sport 53 --dport 1024:65535 -j ACCEPT
$IPTABLES -A OUTPUT -d $ANY_RED -o $EXT_IF -p udp -m udp --dport 53 --sport 1024:65535 -j ACCEPT

#NTP
$IPTABLES -A INPUT  -p udp -m udp --dport 123 -i $EXT_IF -s $ANY_RED -j ACCEPT
$IPTABLES -A OUTPUT -p udp -m udp --sport 123 -j ACCEPT

#ICMP
$IPTABLES -A INPUT -p icmp --icmp-type echo-request -m limit --limit 2/s -j ACCEPT
$IPTABLES -A OUTPUT -p icmp --icmp-type echo-request -m limit --limit 2/s -j ACCEPT
$IPTABLES -A INPUT -p icmp --icmp-type echo-reply -m limit --limit 2/s -j ACCEPT
$IPTABLES -A OUTPUT -p icmp --icmp-type echo-reply -m limit --limit 2/s -j ACCEPT
#Redirecciones
$IPTABLES -A INPUT -p icmp --icmp-type redirect -m limit --limit 2/s -j ACCEPT
$IPTABLES -A OUTPUT -p icmp --icmp-type redirect -m limit --limit 2/s -j ACCEPT
#Tiempo Excedido
$IPTABLES -A INPUT -p icmp --icmp-type time-exceeded -m limit --limit 2/s -j ACCEPT
$IPTABLES -A OUTPUT -p icmp --icmp-type time-exceeded -m limit --limit 2/s -j ACCEPT
#Destino Inalcanzable
$IPTABLES -A INPUT -p icmp --icmp-type destination-unreachable -m limit --limit 2/s -j ACCEPT
$IPTABLES -A OUTPUT -p icmp --icmp-type destination-unreachable -m limit --limit 2/s -j ACCEPT

#INET
$IPTABLES -A OUTPUT -o $EXT_IF -p tcp -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
$IPTABLES -A INPUT  -i $EXT_IF -p tcp -m state --state ESTABLISHED,RELATED -j ACCEPT

$IPTABLES -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT

$IPTABLES -t nat -A PREROUTING  -m state --state RELATED,ESTABLISHED -j ACCEPT

$IPTABLES -t nat -A PREROUTING  -i $EXT_IF -d $EXT_IP -j ACCEPT
$IPTABLES -t nat -A PREROUTING  -m state --state RELATED,ESTABLISHED -j ACCEPT

$IPTABLES -t nat -A POSTROUTING -o $EXT_IF -s $EXT_IP -j ACCEPT
$IPTABLES -t nat -A POSTROUTING -m state --state RELATED,ESTABLISHED -j ACCEPT

$IPTABLES -t nat -A POSTROUTING -o $LAN_IF -s $LAN_RED -j ACCEPT

#==========================LOGS=========/var/log/kern.log============#

#$IPTABLES -t nat -A PREROUTING  -j LOG --log-prefix "[FW - PR] "
#$IPTABLES -t nat -A POSTROUTING -j LOG --log-prefix "[FW - PO] "
#$IPTABLES -A FORWARD -j LOG --log-prefix "[FW - FW] "
#$IPTABLES -A INPUT -p tcp --dport 1:65535 -j LOG --log-prefix "[FW - IN] "
#$IPTABLES -A OUTPUT -j LOG --log-prefix "[FW - OU] "

#-----
$IPTABLES -A INPUT -p tcp --dport 1:65535 -j DROP
$IPTABLES -A INPUT -p udp --dport 1:65535 -j DROP
#-----

echo "INICIADO
========"
}

#==========================STOP======================================#

stop_rules() {
$IPTABLES -F INPUT
$IPTABLES -F FORWARD
$IPTABLES -F OUTPUT
$IPTABLES -X
$IPTABLES -Z
$IPTABLES -t nat -F
$IPTABLES -P INPUT ACCEPT
$IPTABLES -P FORWARD ACCEPT
$IPTABLES -P OUTPUT ACCEPT

echo 0 > /proc/sys/net/ipv4/ip_forward

echo "DETENIDO
========"
}

#====================================================================#

case "$1" in
    start|i)
$LOGO
start_rules
    ;;

    stop|d)
$LOGO
stop_rules

    ;;
	restart|r)
$LOGO
echo "Restarting IPTABLES FIREWALL ..."
stop_rules
start_rules
;;
	status|s)
$LOGO
$IPTABLES -L -n
;;
    *)
echo "Uso: $0 {start(i)/stop(d)/restart(r)/status(s)}"
    ;;

esac
:
